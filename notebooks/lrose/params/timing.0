$Id: gptl.c,v 1.157 2011-03-28 20:55:18 rosinski Exp $
GPTL was built without threading
HAVE_MPI was false
HAVE_PAPI was false
Underlying timing routine was gettimeofday.
Per-call utr overhead est: 3.4e-08 sec.
If overhead stats are printed, roughly half the estimated number is
embedded in the wallclock stats for each timer.
Print method was most_frequent.
If a '%_of' field is present, it is w.r.t. the first timer for thread 0.
If a 'e6_per_sec' field is present, it is in millions of PAPI counts per sec.

A '*' in column 1 below means the timer had multiple parents, though the
values printed are for all calls.
Further down the listing may be more detailed information about multiple
parents. Look for 'Multiple parent info'

Stats for thread 0:
                                                     On  Called Recurse   Wallclock          max          min     UTR Overhead 
  Total                                               -       1    -     761.969910   761.969910   761.969910         0.000000 
    Main::Init                                        -       1    -      51.811684    51.811684    51.811684         0.000000 
      VarDriver3D::preprocessMetObs                   -       1    -      50.511635    50.511635    50.511635         0.000000 
    Main::Run                                         -       1    -     710.073364   710.073364   710.073364         0.000000 
      CostFunction3D::initState                       -       1    -      96.291016    96.291016    96.291016         0.000000 
        CostFunction3D::setupSplines                  -       1    -       0.244411     0.244411     0.244411         0.000000 
        CostFunction3D::obAdjustments                 -       1    -       1.583448     1.583448     1.583448         0.000000 
        CostFunction3D::calcHmatrix                   -       1    -       6.412929     6.412929     6.412929         0.000000 
        CostFunction3D::calcInnovation                -       1    -       0.067403     0.067403     0.067403         0.000000 
      CostFunction::minimize                          -       1    -     512.514038   512.514038   512.514038         0.000000 
        CostFunction::TruncNewton                     -       1    -     512.511719   512.511719   512.511719         0.000000 
*         CostFunction3D::funcValueAndGradient        -       2    -       2.090424     1.063641     1.026783         0.000000 
          CostFunction3D::Hessian                     -     502    -     486.392090     1.652214     0.884321         0.000034 
*           CostFunction3D::calcHTranspose            -     505    -     127.528244     0.316712     0.202388         0.000034 
*           CostFunction3D::updateHCq                 -     504    -     185.213943     0.702771     0.348823         0.000034 
*             CostFunction3D::SAtransform             -    1011    -     238.695770     0.475245     0.215431         0.000069 
*             CostFunction3D::FFtransform             -    1011    -       5.634448     0.012085     0.003530         0.000069 
*             CostFunction3D::Htransform              -     505    -      29.721643     0.073222     0.052339         0.000034 
*             CostFunction3D::SCtransform             -    1010    -      78.688171     0.184625     0.067492         0.000069 
          CostFunction::MTLineSearch                  -       1    -       1.129849     1.129849     1.129849         0.000000 
      CostFunction3D::updateBG                        -       1    -     101.267570   101.267570   101.267570         0.000000 
    Main::Finalize                                    -       1    -       0.084787     0.084787     0.084787         0.000000 

Overhead sum =  0.000344 wallclock seconds
Total calls  = 5064

Multiple parent info for thread 0:
Columns are count and name for the listed child
Rows are each parent, with their common child being the last entry, which is indented.
Count next to each parent is the number of times it called the child.
Count next to child is total number of times it was called by the listed parents.

       2 CostFunction3D::initState       
     504 CostFunction3D::updateHCq       
       2 CostFunction3D::funcValueAndGradient
     502 CostFunction3D::Hessian         
       1 CostFunction3D::updateBG        
    1011   CostFunction3D::SAtransform     

       2 CostFunction3D::initState       
     504 CostFunction3D::updateHCq       
       2 CostFunction3D::funcValueAndGradient
     502 CostFunction3D::Hessian         
       1 CostFunction3D::updateBG        
    1011   CostFunction3D::FFtransform     

       1 CostFunction3D::calcInnovation  
     504 CostFunction3D::updateHCq       
     505   CostFunction3D::Htransform      

       1 CostFunction3D::initState       
       2 CostFunction3D::funcValueAndGradient
     502 CostFunction3D::Hessian         
     505   CostFunction3D::calcHTranspose  

       1 CostFunction3D::initState       
     504 CostFunction3D::updateHCq       
       2 CostFunction3D::funcValueAndGradient
     502 CostFunction3D::Hessian         
       1 CostFunction3D::updateBG        
    1010   CostFunction3D::SCtransform     

       1 CostFunction::TruncNewton       
       1 CostFunction::MTLineSearch      
       2   CostFunction3D::funcValueAndGradient

       2 CostFunction3D::funcValueAndGradient
     502 CostFunction3D::Hessian         
     504   CostFunction3D::updateHCq       


Thread 0 total memory usage = 39.584 KB
  Hashmem                   = 32.768 KB
  Regionmem                 = 6.336 KB (papimem portion = 0 KB)
  Parent/child arrays       = 0.48 KB

Total memory usage all threads = 39.584 KB

threadid[0] = 0
